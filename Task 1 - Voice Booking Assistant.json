{
  "name": "Task 1 - Voice Booking Assistant",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "incoming-call",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -640,
        -80
      ],
      "id": "0dfd7438-7d13-40e8-85d5-cf294ed5c853",
      "name": "Webhook",
      "webhookId": "8c03d5e9-8f9d-497e-ac7a-08abdb5a53a4"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "775aec94-42fb-401b-b363-447551ab496f",
              "name": "recording_url",
              "value": "={{ $json.body.body.split('\\n')[0].split('=')[1] + '.mp3' }}",
              "type": "string"
            },
            {
              "id": "67855792-2b2f-44bf-adb9-7eee578d0b6c",
              "name": "caller",
              "value": "={{ $json.body.body.split('\\n')[1].split('=')[1] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -440,
        80
      ],
      "id": "7410f177-ae1c-4f3c-a9ad-5c4b10a47cdd",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "url": "={{ $json[\"recording_url\"] }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -260,
        -80
      ],
      "id": "8b20a093-cd19-4273-a04d-3c06d2874b44",
      "name": "HTTP Request (Download)",
      "credentials": {
        "httpBasicAuth": {
          "id": "9BWHJQMBaXroB1BE",
          "name": "Twilio"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const raw = $json.choices[0].message.content;\n\n// ‚úÇÔ∏è Extract only the JSON inside code block\nconst match = raw.match(/```json\\n([\\s\\S]+?)```/);\n\nif (!match || !match[1]) {\n  throw new Error(\"No valid JSON block found in AI response.\");\n}\n\nconst parsed = JSON.parse(match[1].trim());\n\n// üóìÔ∏è Fix \"tomorrow\" input\nif (parsed.date === \"tomorrow\") {\n  const tomorrow = new Date();\n  tomorrow.setDate(tomorrow.getDate() + 1);\n  parsed.date = tomorrow.toISOString().split('T')[0]; // \"YYYY-MM-DD\"\n} else {\n  // üõ† Fix for year issues if not tomorrow\n  const fixed = new Date(parsed.date);\n  fixed.setFullYear(2025);\n  parsed.date = fixed.toISOString().split('T')[0];\n}\n\n// ‚è∞ Adjust to Malaysia Time (UTC+8)\nconst localDateTime = new Date(`${parsed.date}T${parsed.time || '10:00'}:00+08:00`);\nparsed.formattedDate = localDateTime.toISOString(); // for Google Calendar & Airtable\n\nreturn {\n  json: parsed\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        420,
        80
      ],
      "id": "27cd7a6d-e33c-4fe7-a1f8-6f07edb66081",
      "name": "Code"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "209488@student.upm.edu.my",
          "mode": "list",
          "cachedResultName": "209488@student.upm.edu.my"
        },
        "start": "=\t{{ $json.start }}",
        "end": "=\t{{ $json.end }}",
        "additionalFields": {
          "description": "={{ `Booking intent from AI assistant.\\nDate: ${$json.date || 'not detected'}\\nTime: ${$json.time || '10:00 AM'}\\nBranch: ${$json.branch || 'not specified'}` }}",
          "summary": "={{ \"AI Booking: Dialysis Session\" }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [
        860,
        -80
      ],
      "id": "8549a35c-90fd-4980-8cd9-7ce6f9ab7f8b",
      "name": "Create an event",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "7NfX2ishZu77zOI5",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "appBrBID1oiV7UPzn",
          "mode": "list",
          "cachedResultName": "AI Bookings",
          "cachedResultUrl": "https://airtable.com/appBrBID1oiV7UPzn"
        },
        "table": {
          "__rl": true,
          "value": "tblvLvdBw41MR1Dkc",
          "mode": "list",
          "cachedResultName": "Bookings",
          "cachedResultUrl": "https://airtable.com/appBrBID1oiV7UPzn/tblvLvdBw41MR1Dkc"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Intent": "=\t{{ $json.intent }}",
            "Transcript": "={{ $json.transcript }}",
            "Branch": "=`{{ $json.branch",
            "Caller": "={{ $json.caller }}",
            "formattedDate": "={{ $json.formattedDate }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Caller",
              "displayName": "Caller",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "formattedDate",
              "displayName": "formattedDate",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "dateTime",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Branch",
              "displayName": "Branch",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Transcript",
              "displayName": "Transcript",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Intent",
              "displayName": "Intent",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        1200,
        -80
      ],
      "id": "aecf0018-45cb-42ef-bf09-69133d0bb539",
      "name": "Create a record",
      "credentials": {
        "airtableTokenApi": {
          "id": "nwUGl9pgt6g1ArXK",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.deepseek.com/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer sk-b0983c21de5c4deba66330c24ec5863c"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"deepseek-chat\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"You are a helpful booking assistant who understands both Malay and English. Detect the user‚Äôs language automatically and reply in that language. Keep your responses short and natural. Confirm the booking with the user clearly and naturally. End the conversation nicely, e.g., 'Thanks for calling, see you soon!' or 'Let me know if you need anything else!' \\n\\nAlso, extract the booking intent and return it as a **raw JSON** object with the following fields:\\n\\n- intent: (e.g., 'booking')\\n- date: in strict ISO format (YYYY-MM-DD)\\n- time: in 24h format (HH:mm) or null if not mentioned\\n- branch: optional, string\\n\\nReturn the **natural reply first**, followed by the JSON object on a new line, inside a code block. Do not include any explanation or headings.\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"{{ $json.results.channels[0].alternatives[0].transcript }}\"\n    }\n  ],\n  \"temperature\": 0.3\n}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        200,
        -80
      ],
      "id": "9b7a2193-56fb-4d5e-83fe-bc8140aec9ef",
      "name": "HTTP Request (Deepseek LLM)"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.deepgram.com/v1/listen",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Token 2843890e6def3da81b83345c0740a75ef9508f02"
            },
            {
              "name": "language",
              "value": "mul"
            }
          ]
        },
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "data",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -40,
        -80
      ],
      "id": "03f06106-d5e7-4723-aff0-2f09d6330739",
      "name": "HTTP Request (Deepgram Transcription)"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "09080f1b-a977-40ac-b517-67426edef533",
              "name": "start",
              "value": "={{ new Date(new Date($json.formattedDate).toLocaleString(\"en-US\", { timeZone: \"Asia/Kuala_Lumpur\" })).toISOString() }}",
              "type": "string"
            },
            {
              "id": "21144dd2-ede8-4e00-87ab-71d1f5bbb506",
              "name": "end",
              "value": "={{ new Date(new Date($json.formattedDate).getTime() + 60*60*1000).toLocaleString(\"en-US\", { timeZone: \"Asia/Kuala_Lumpur\" }) }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        640,
        80
      ],
      "id": "fee2668d-bc5e-44bf-a936-61232956dce7",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "return {\n  json: {\n    ...$json,\n    caller: $node[\"Edit Fields\"].json.caller,\n    transcript: $node[\"HTTP Request (Deepgram Transcription)\"].json.results.channels[0].alternatives[0].transcript,\n    formattedDate: $json.formattedDate || $node[\"Code\"].json.formattedDate,\n    \n    // üî• Fix intent and branch ‚Äî pull from where they're still available\n    intent: $json.intent || $node[\"Edit Fields1\"].json.intent,\n    branch: $json.branch || $node[\"Edit Fields1\"].json.branch\n  }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1040,
        80
      ],
      "id": "d8cedabb-f060-4437-9154-7988846d48fa",
      "name": "Code1"
    },
    {
      "parameters": {
        "content": "## üìûWebhook (Trigger)\nTrigger for incoming Twilio voice call (production URL). Starts the AI booking flow.",
        "width": 280
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -700,
        -280
      ],
      "typeVersion": 1,
      "id": "bfeebe55-848a-4fe8-8a10-e7e97c863eb1",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## ‚ö†Ô∏èLimitation\nTwilio Sandbox allows 10 unique outbound messages per day. Use with caution during testing.",
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1000,
        -100
      ],
      "typeVersion": 1,
      "id": "af9a11fa-86ee-4617-a3e7-5388edca86cd",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Voice-to-Text (Deepgram)\nConverts user's spoken input into text (English + Malay supported). Set language to ms or auto.",
        "width": 260
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -120,
        140
      ],
      "typeVersion": 1,
      "id": "ec142103-a5c7-4a05-ac55-7ad166c4db50",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## LLM (DeepSeek)\nUses DeepSeek to extract booking intent from transcribed speech. Returns structured JSON with date, time, branch.",
        "width": 280
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        140,
        -280
      ],
      "typeVersion": 1,
      "id": "246343ed-5f41-40ef-bcee-f92f1e73aa4a",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## Code (Parse + Fix Dates)\nParses JSON from LLM response. Fixes wrong year (2024 ‚ûù 2025), and adjusts time to Malaysia timezone (UTC+8)."
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        320,
        240
      ],
      "typeVersion": 1,
      "id": "d9ddf191-4916-4f8f-a7e6-eecec1d02431",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## Set Node (Start & End Time)\nSets booking start and end time in ISO format for calendar integration."
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        620,
        240
      ],
      "typeVersion": 1,
      "id": "75da44c8-2212-4ee7-b83d-3afb56bb0284",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "## Google Calendar Event\nCreates the actual calendar event for the booking. Summary + description based on AI output."
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        780,
        -280
      ],
      "typeVersion": 1,
      "id": "f4774f4e-8df3-44b2-9290-6197abff3ce7",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "## Airtable Record (CRM)\nLogs booking info in Airtable CRM with accurate date/time for traceability."
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1120,
        -280
      ],
      "typeVersion": 1,
      "id": "3899a492-2239-4eff-9f80-be20f5edae68",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "## Workflow Overview: AI-Powered Inbound Call Booking Assistant\nThis workflow handles inbound voice calls from users, understands their booking intent via speech, and automatically creates a calendar event and logs it in a CRM system.",
        "height": 180,
        "width": 640,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1000,
        -540
      ],
      "typeVersion": 1,
      "id": "090d226b-fc85-4435-97ed-103933ad66ca",
      "name": "Sticky Note8"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "HTTP Request (Download)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request (Download)": {
      "main": [
        [
          {
            "node": "HTTP Request (Deepgram Transcription)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create an event": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request (Deepseek LLM)": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request (Deepgram Transcription)": {
      "main": [
        [
          {
            "node": "HTTP Request (Deepseek LLM)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Create an event",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Create a record",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create a record": {
      "main": [
        []
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "0b57b0b6-a35e-4738-b07a-ee1bed6a08f6",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "1cada1e53ee2217bc3892b32cfdabc703144f839d48c234c2a041fc1215cfdff"
  },
  "id": "iTTS6neRGJx9x4eU",
  "tags": []
}